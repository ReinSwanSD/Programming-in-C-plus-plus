Script started on Sat 23 Oct 2021 07:57:33 PM PDT
]0;swane003@empress:~/cs311RY/CS311Progs-Corrected/HWPrograms/forHW3[?1034h[swane003@empress forHW3]$ g++ HW3P1client.cpp llist.cpp
]0;swane003@empress:~/cs311RY/CS311Progs-Corrected/HWPrograms/forHW3[swane003@empress forHW3]$ ./a.out

MENU: These are your options: 

   (1) Case 1  
   (2) Case 2  
   (3) Case 3  
    Enter ( 0 ) to quit 
===>1
CASE 1: Basic --------------- 
... in llist constructor...
Step 1
It is empty
Step 2
[ Empty ]
Step 3 adding 1 2 3 4
Step 4
[ 1  2  3  4 ]
Step 5 deleteFront twice
Removed: 1
Removed: 2
Step 6
[ 3  4 ]
Step 7
It is not empty
Step 8 deleteRear twice
Removed: 4
[ 3 ]
Removed: 3
Step 9
List empty
Step 10
Step 11
[ 5  6  8  9 ]
Step 12 deleteRear all
Removed: 9
Removed: 8
Removed: 6
Removed: 5
Step 13
[ Empty ]
.... in llist destructor...

MENU: These are your options: 

   (1) Case 1  
   (2) Case 2  
   (3) Case 3  
    Enter ( 0 ) to quit 
===>2
Case 2: Insert and Delete ------------
... in llist constructor...
Step 1 addFront 9 8 6 5
Step 2
[ 5  6  8  9 ]
Step 3 insert first 4
Step 4 insert 4th 7
Step 5 insert 7th 10
[ 4  5  6  7  8  9  10 ]
Step 6 insert 9th
Error: Out of range...
Step7 insert 0th
Error: Out of range...
Step 8
[ 4  5  6  7  8  9  10 ]
Step 9 delete 1st
removed 4
[ 5  6  7  8  9  10 ]
Step 10 delete 6th
Removed: 10
[ 5  6  7  8  9 ]
Step 11 delete 3rd
Removed: 7
[ 5  6  8  9 ]
Step 12 delete 5th
Error: Out of Range...
Step 13 delete 0th
Error: Out of range...
Step 14
[ 5  6  8  9 ]
Step 15 delete all
Removed: 9
Removed: 8
Removed: 6
Removed: 5
Step 16
[ Empty ]
Step 17 insert 0th
Error: Out of range...
Step 18 deleteFront
Error: Underflow...
Step 19 delete 2nd
Error: Out of range...
Step 20 deleteRear
Error: Underflow...
.... in llist destructor...

MENU: These are your options: 

   (1) Case 1  
   (2) Case 2  
   (3) Case 3  
    Enter ( 0 ) to quit 
===>3
Case 3: Copy Constructor and = -------
... in llist constructor...
... in llist constructor...
Step 1
L1: [ 1  2  3  4  5 ]
Step 2
in copy test
[ 1  2  3  4  5  6 ]
finished
.... in llist destructor...
-- After copytest --- 
step 3
L1: [ 1  2  3  4  5 ]
-- Testing operator overloading ---
Step 4 Gets L1
Step 5
L1: [ 1  2  3  4  5 ]
Step 6 adding 7 8 9 10
Step 7
L2: [ 7  8  9  10 ]
Step 8 Gets L2
Step 9
L2: [ 1  2  3  4  5 ]
Step 10
Removed: 5
Step 11
L1 :[ 1  2  3  4 ]
Step 12
L1: [ 1  2  3  4 ]
Step 13
L2: [ 1  2  3  4  5 ]
.... in llist destructor...
.... in llist destructor...

MENU: These are your options: 

   (1) Case 1  
   (2) Case 2  
   (3) Case 3  
    Enter ( 0 ) to quit 
===>0
]0;swane003@empress:~/cs311RY/CS311Progs-Corrected/HWPrograms/forHW3[swane003@empress forHW3]$ exit
exit

Script done on Sat 23 Oct 2021 07:57:57 PM PDT
